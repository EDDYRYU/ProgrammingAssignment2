my_data==NA
sum(my_na)
my_data
0/0
Inf
Inf-Inf
x
x[1:10]
x[is.na(x)]
y<-x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c('foo','bar')]
my_vector<-c(1:20)
my_vector<-1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector)<-c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<-my_vector
?matrix
my_matrix2<-matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
c("Bill",'Gina','Kelly','Sean')->patients
cbind(patients,my_matrix)
my_data<-data.frame(patients,my_matrix)
my_data
class(my_data)
cnames<-c("patient","age","weight","bp","rating","test")
colnames(my_data)<-cnames
my_data
TRUE==TRUE
FALSE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!7
5!=7
5!==7
!5==7
FALSE&FALSE
TRUE&c(TRUE,FALSE,FALSE)
TRUE&&c(TRUE,FALSE,FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FASLE)
TRUE||c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins,'twins)
identical('twins','twins')
xor(5==6, !FALSE)
ints<-samples(10)
ints<-sample(10)
?sample
ints
ints>5
which(c(TRUE,FALSE,TRUE))
which(>7)
which((ints>7)
)
which((ints>7))
?which
ints>7
which(ints>7)
any(ints)
any(ints<0)
?any
all(ints>0)
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function()
boring_function
submit()
my_mean(c(4,5,10))
submit()
submit()
submit()
submit()
remainder(5)
remainder(11,5)
remainder(divisor=11,num=5)
remainder(4,div=2)
args(remainder)
submit()
?std
?sd
evaluate(sd,c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
x[END]
x[end]
?paste
paste("Programming","is","fun!")
submit(0)
submit()
telegram("doing","R Programming","and","never")
submit()
submit()
mad_libs(place="SUWON",adjective="tired",noun="buildings")
submit()
"I" %p% "love" %p% "R!"
d1<-Sys.date()
d1<-Sys.Date()
d1
class(d1)
unclass(d1)
d1
d2<-as.Date("1969-01-01")
unclass(d2)
Sys.time()
t1<-Sys.time()
t1
class(t1)
uncalss(t1)
unclass(t1)
as.POSIXlt(Sys.time())
Sys.time()
t2<-as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3<-"October 17, 1986 08:24"
strptime(t3,"%B %d, %Y %H:%M")
t4<-strptime(t3,"%B %d, %Y %H:%M")
t4
class(t4)
Sys.time()>t1
Sys.time() - t1
difftime(Sys.time(),t1,units='days')
swirl()
head(flags)
dim(flags)
viewinfo(flags)
viewinfo()
class(flags)
lapply(flags,class)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)->cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
swirl()
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
lapply(flags,unique)
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,length)
sapply(flags,unique)
?elem
lapply(unique_vals,function(elem)elem[2])
bye()
?q1
?runif
?rnorm
?g1
?interaction
rnorm(10)
plot(rnorm(10))
plot(rnorm(10))
plot(rnorm(10,sd = 2))
plot(rnorm(10,mean=0
,sd = 2))
plot(rnorm(10,mean=0,sd = 2))
library(datasets)
data("iris")
?iris
View(iris)
mean(iris$Sepal.Length[["Species"="virginica"]])
subset(iris,subset = Sepal.Length)
subset(iris,subset = "Sepal.Length")
subset?
?subset
mean(subset(iris,Species==virginica,select=Sepal.Length))
mean(subset(iris,Species=="virginica",select=Sepal.Length))
mean(subset(iris,Species=="virginica",select=Sepal.Length),na.rm=TRUE)
mean(subset(iris,Species=="virginica",select="Sepal.Length"),na.rm=TRUE)
is.na(iris$Sepal.Length)
sum(is.na(iris$Sepal.Length))
iris$Sepal.Length[[(iris$Species==virginica)]]
(iris$Species==virginica)
(iris$Species=="virginica")
iris[[(iris$Species=="virginica")]]
iris[(iris$Species=="virginica")]
iris[Species=="virginica"]
iris[[Species=="virginica"]]
subset(iris,Species=="virginica",select=Sepal.Length)
mean(subset(iris,Species=="virginica",select=Sepal.Length))
class(subset(iris,Species=="virginica",select=Sepal.Length))
vect<-(subset(iris,Species=="virginica",select=Sepal.Length))
sapply(mean,vect)
sapply(vect,mean)
?apply
apply(iris[,1:4],2,mean)
data(mtcars)
View(mtcars)
class(mtcars)
mean(mtcars$mpg,mtcars$cyl)
?tapply
tapply(mtcars$mpg,mtcars$cyl,mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
lapply(mtcars,mean)
sapply(mtcars,cyl,mean)
split(mtcars$mpg,mtacars$cyl)
split(mtcars$mpg,mtcars$cyl)
split(mtcars$cyl,mtcars$mpg)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
with(mtcars,tapply(mpg,cyl,mean))
tapply(mtcars$hp,mtcars$cyl,mean)
tapply(mtcars$hp,mtcars$cyl,mean)[3]-tapply(mtcars$hp,mtcars$cyl,mean)[1]
debug(ls)
ls()
stop
q
debug(ls)
ls()
2
1
debug(ls)
ls
ls()
get<-function() x
get
x<-2
N
0
quit
Q
get
x
Q
debug
Q
?debug
break
end
quit
exit
Q
Q
traceback
x
traceback
debug(ls)
ls()
undebug(ls)
undebug(ls)
undebug(ls)
undebug(ls)
function()x
ggg<- function() x
ggg
rm(ggg)
set
ggg <- function() x
x<-10
ggg
?`<<-`
source('makeVector.R')
source("makeVector.R")
submit()
dir_old
dir_assignment
setwd(dir_assignment)
setwd("..")
submit()
source("makeVector.R")
source("cachemean.R")
makeVector(c(10,20,30))
makeVector
makeVector(1)
x<-10
makeVector(x)
cachemean(3)
makeVector
makeVector()
makeVector(rep(3,2))
v<-makeVector((c(1,2,3,4,5)))
v
cachemean(v)
cachemean(v)
cachemean(v)
v<-makeVector((c(1,2,3,4,5)))
cachemean(v)
cachemean(v)
v<-makeVector((c(1,2,3)))
cachemean(v)
v<-makeVector((c(1,2,3,4)))
cachemean(v)
getwd()
setwd(dir_ol)
setwd(dir_old)
source('~/ProgrammingAssignment2/cachematrix.R')
source("~/ProgrammingAssignment2/cachematrix.R")
source("~\ProgrammingAssignment2\cachematrix.R")
source("/ProgrammingAssignment2/cachematrix.R")
source("../ProgrammingAssignment2/cachematrix.R")
?source
source("../ProgrammingAssignment2/cachematrix.R")
getwd()
list.files()
list.files("../ProgrammingAssignment2")
list.files(../ProgrammingAssignment2)
file.path("ProgrammingAssignment2")
list.files(file.path("ProgrammingAssignment2"))
source(file.path("ProgrammingAssignment2","cachematrix.R"))
edit
edit("cachematrix.R")
edit(cachematrix.R)
getwd()
?cachematrix
?cachematrix.R
cachematrix
source(file.path("ProgrammingAssignment2","cachematrix.R"))
View(makeCacheMatrix)
View('makeVector.R')
source("makeVector.R")
source(file.path("Coursera_2.R Programming","makeVector.R"))
View(cachemean)
v<-makeVector(c(1,2,3,4,5,5,6,6))
cachemean(v)
makeVector(c(1,2,1,2,1,2,2,2,2,2))
m
m
x
rm(x)
rm(m)
ls()
ls()-dir_old
ls()-"dir_old"
ls(-dir_old)
setdiff(x = ls(),y=dir_old)
?setdiff
ls()
setdiff(x = ls(),y="dir_old")
rm(list=setdiff(ls(),c("dir_old","dir_assignment","makeCacheMatrix","makeVector","cachemean","cacheSolve"))
)
makeVector(c(2,2,2,2,3,3,3,3,3,3,3,3,6,6,7,8,9))
m
x
y
v<-makeVector(c(2,2,2,2,3,3,3,3,3,3,3,3,6,6,7,8,9))
cachemean(v)
vv<-cachemean(v)
vv
a
a<-matrix(data = c(1,1,2,4,5,6,8,4,2),3,3)
t(a)
a*t(a)
?`.*``
?`.*`
crosspod(a,t(a))
crossprod(a,t(a))
a%*%t(a)
solve(a)
dim(a)
dim(a)[1]
dim(a)[2]
dim(a)[3]
b
b<-matrix(c(1,1,2,3,3,6,2,2,4),3,3)
solve(b)
det(b)
det(a)
bb<-matrix(1:12,3,3)
solve(bb)
det(bb)
bb
bb<-matrix(1:12,4,3)
solve(bb)
det(bb)
getwd()
setwd(file.path("ProgrammmingAssignment2"))
setwd(dir_assignment)
setwd("..")
setwd(file.path("ProgrammmingAssignment2"))
getwd()
setwd("..")
setwd("ProgrammingAssignment2")
source("cachematrix.R")
rm(c(a,b,bb,v))
rm(list=c(a,b,bb,v))
rm(a,b,bb,v)
rm(vv)
a<-matrix(data = 1:12,4,3)
makeCacheMatrix(a)
cacheSolve(a)
a<-matrix(c(3,3,3,1,6,3,6,7,5),3,3)
makeCacheMatrix(a)
cacheSolve(a)
traceback
cacheSolve(a)
traceback()
browser()
debugonce(cachematrix.R)
debugonce(cacheSolve)
cacheSolve (a)
a
makeCacheMatrix(a)
A<-makeCacheMatrix(a)
A$get()
A$set()
A$getInverse()
a
a$getInverse()
A<-makeCacheMatrix(a)
cacheSolve(A)
A$getInverse()
A
a<-NULL
a<-matrix(1:9,3,3)
A$set()
A$get()
A$set(a)
A
A$get()
A$getInverse
A$getInverse()
A$setInverse()
debugonce
A$setInverse()
traceback()
makeCacheMatrix(a)
A<-makeCacheMatrix(a)
cacheSolve(A)
solve(a)
a<-matrix(c(1,3,5,2,6,3,6,7,8),3,3)
A<-makeCacheMatrix(a)
cacheSolve(A)
cacheSolve(A)
rm(m,a,A)
Y<-makeCacheMatrix(matrix(c(1,6,2,4,5,7,2,2,2),3,3))
cacheSolve(Y)
Y
cacheSolve(Y)
X<-matrix(c(1,6,2,4,5,7,2,2,2),3,3))
X<-matrix(c(1,6,2,4,5,7,2,2,2),3,3)
cacheSolve(Y)
Y<-makeCacheMatrix(X)
Y
cacheSolve(Y)
Y$getInverse()
source("cachematrix.R")
Y<-makeCacheMatrix(X)
cacheSolve(Y)
Y
Y$getInverse()
Y$set()
Y$set(X)
cacheSolve(Y)
cacheSolve(Y)
cacheSolve(Y)
rm(m)
cacheSolve(Y)
source("cachematrix.R")
Y<-makeCacheMatrix(X)
cacheSolve(Y)
source("cachematrix.R")
Y<-makeCacheMatrix(X)
cacheSolve(Y)
source("cachematrix.R")
Y<-makeCacheMatrix(X)
cacheSolve(Y)
View(getInverse)
source("cachematrix.R")
Y<-makeCacheMatrix(X)
cacheSolve(Y)
